<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="adminMapper">

<!--    <resultMap id="admin" type="com.green.shop.admin.vo.MemberVO">-->
<!--        <result column="MEMBER_ROLL" property="memberRoll"/>-->
<!--    </resultMap>-->

<!-- 다음에 INSERT할 ITEM_CODE를 조회 -->
    <select id="selectItemCode" resultType="int">
        SELECT IFNULL(MAX(ITEM_CODE), 0) + 1 FROM shop_item;
    </select>

<!-- 상품 등록 (관리자만 사용 가능)-->
    <insert id="insertItem">
        INSERT INTO SHOP_ITEM (
              ITEM_CODE
            , ITEM_NAME
            , ITEM_PRICE
            , ITEM_INTRO
            , CATE_CODE
        ) VALUES (
              #{itemCode}
            , #{itemName}
            , #{itemPrice}
            , #{itemIntro}
            , #{cateCode}
        )
    </insert>

<!-- 상품 이미지 정보 등록 (관리자만 사용 가능) -->
<!-- 이미지를 등록한 갯수만큼 반복해야 함 -->
<!-- foreach -->
<!-- collection : 반복 돌릴거 -->
<!-- item : 개별 자료형 -->
<!-- separator : 구분자 -->
    <insert id="insertImgs">
        INSERT INTO ITEM_IMAGE (
            ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , IS_MAIN
            , ITEM_CODE
        ) VALUES
    <foreach collection="imgList" item="img" separator=",">
        (
            #{img.originFileName}
            , #{img.attachedFileName}
            , #{img.isMain}
            , #{img.itemCode}
        )
    </foreach>
    </insert>

    <!-- 구매 목록 조회 + 검색 (관리자용) -->
    <!--  등호 기호를 태그로 인식하므로...  -->
    <!-- 작다 < : &lt; less than -->
    <!-- 크다 > : &gt; greater than -->
    <select id="selectBuyInfoList" resultMap="buyMapper.buy">
        SELECT BUY_CODE
            , MEMBER_ID
            , BUY_PRICE
            , BUY_DATE
        FROM shop_buy
        WHERE 1 = 1
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        <if test='fromDate != null and !fromDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE, '%Y-%m-%d') &gt;= #{fromDate}
        </if>
        <if test='toDate != null and !toDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE, '%Y-%m-%d') &lt;= #{toDate}
        </if>
        ORDER BY BUY_DATE DESC;
    </select>


    <!-- 구매 목록 조회 -> 상세구매정보 조회 (관리자용) -->
    <select id="selectBuyDetail" resultMap="buyMapper.buy">
        SELECT BUY.BUY_CODE
                , MEMBER_ID
                , BUY_PRICE
                , BUY_DATE
                , BUY_CNT
                , TOTAL_PRICE
                , ITEM_NAME
                , ATTACHED_FILE_NAME
        FROM shop_buy Buy
        INNER JOIN buy_detail DETAIL
        ON BUY.BUY_CODE = DETAIL.BUY_CODE
        INNER JOIN shop_item ITEM
        ON ITEM.ITEM_CODE = DETAIL.ITEM_CODE
        INNER JOIN ITEM_IMAGE IMG
        ON IMG.ITEM_CODE = ITEM.ITEM_CODE
        WHERE IS_MAIN = 'Y'
        AND BUY.BUY_CODE = #{buyCode}
    </select>

    <!-- 상품 목록  -->
    <select id="selectItemBeforeUpdate" resultMap="itemMapper.item">
        SELECT ITEM_CODE
            , ITEM_NAME
            , ITEM_STOCK
            , ITEM_STATUS
            , CASE
                WHEN ITEM_STATUS = 1 THEN '준비 중'
                WHEN ITEM_STATUS = 2 THEN '판매 중'
                ELSE '판매 불가'
                END AS STR_STATUS
        FROM shop_item;
    </select>

    <!-- 상품상세보기 -->
    <select id="selectItemDetail" resultMap="itemMapper.item">
        SELECT CATE_NAME
            , CATE.CATE_CODE
            , ITEM_STOCK
            , ITEM_NAME
            , ITEM_STATUS
            , ITEM.ITEM_CODE
            , ATTACHED_FILE_NAME
            , ORIGIN_FILE_NAME
            , IMG_CODE
            , IS_MAIN
        FROM shop_item ITEM
        INNER JOIN item_category CATE
        ON ITEM.CATE_CODE = CATE.CATE_CODE
        INNER JOIN item_image IMG
        ON ITEM.ITEM_CODE = IMG.ITEM_CODE
        WHERE ITEM.ITEM_CODE = #{itemCode};
    </select>

    <!-- cateCode는 뭘로? -->
    <update id="updateItem">
        UPDATE shop_item
        SET
            ITEM_STOCK = #{itemStock}
            , ITEM_NAME = #{itemName}
            , ITEM_STATUS = #{itemStatus}
            , CATE_CODE = #{cateCode}
        WHERE ITEM_CODE = #{itemCode};
    </update>


</mapper>































